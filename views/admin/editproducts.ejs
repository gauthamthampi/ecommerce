<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit product</title>
    <link rel="icon" href="/static/assets/logo.jpg">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Allura&family=Dancing+Script:wght@400..700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.css" integrity="sha512-bs9fAcCAeaDfA4A+NiShWR886eClUcBtqhipoY5DM60Y1V3BbVQlabthUBal5bq8Z8nnxxiyb1wfGX2n76N1Mw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    
    
    <style>
      #imagePreviewContainer {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }
    
      .img-preview {
        max-width: 100px; /* Adjust the max-width as needed */
        max-height: 100px; /* Adjust the max-height as needed */
        border: 1px solid #ddd; /* Add a border for better visibility */
        margin-bottom: 10px;
      }
     
    .img-container {
        position: relative;
        display: inline-block;
    }

    .remove-btn {
        position: absolute;
        top: 0;
        right: 0;
        background-color: transparent;
        color: #fff; /* Set the color of the 'X' symbol */
        border: none;
        cursor: pointer;
        font-size: 20px;
    }

    .remove-btn:hover {
        color: #ff0000; /* Change the color on hover if desired */
    }
    </style>
   
</head>
<body>
    <div class="d-flex justify-content-end ">
        <div class="float-end">
         <a href="/homepage" class="d-inline-flex link-body-emphasis text-decoration-none fs-2 fst-italic fst-bold fw-bolder" style="font-family: Allura, cursive;
         font-weight: 500;"> G Times
         </a>
         <img src="/static/assets/g-times-high-resolution-logo-transparent.png" style="width: 70px; height: 65px;" class="mx-2 img-fluid">
        </div>
     </div>
    
     <div class="d-flex justify-content-center" style="margin-top: 10px;">
        <h1>EDIT PRODUCTS</h1>
    </div>

   <form action="/editproduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
    <div class="container d-flex justify-content-center" style="margin-top: 30px;">
    <div class="row justify-content-center">
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingInput" name="modelname" value="<%= product.modelname%>" required>
            <label for="floatingInput">Model Name</label>
          </div>
          <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingPassword" name="brand" value="<%= product.brand%>" required>
            <label for="floatingInput">Brand</label>
          </div>
          <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingPassword" name="description" value="<%= product.description%>" required>
            <label for="floatingInput">Description</label>
          </div>
          <div class="form-floating  mb-3">
            <select class="form-select" id="floatingSelect" aria-label="Floating label select example" name="category" required value="<%= product.category%>">
              <option value="Men">Men</option>
              <option value="Women">Women</option>
              <option value="Smart">Smart</option>
            </select>
            <label for="floatingSelect">Choose the category</label>
          </div>
          <div class="form-floating  mb-3">
            <select class="form-select" id="floatingSelect" aria-label="Floating label select example" name="colour" required value="<%= product.colour%>">
              <option value="Black">Black</option>
              <option value="Blue">Blue</option>
              <option value="White">White</option>
              <option value="Brown">Brown</option>
              <option value="Gold">Gold</option>
              <option value="Silver">Silver</option>
            </select>
            <label for="floatingSelect">Choose the colour</label>
          </div>
          <div class="form-floating mb-3">
            <select class="form-select" id="floatingSelect" aria-label="Floating label select example" name="dialshape" required value="<%= product.dialshape%>">
              <option value="Round">Round</option>
              <option value="Square">Square</option>
              <option value="Rectangle">Rectangle</option>
            </select>
            <label for="floatingSelect">Choose the Dial shape</label>
          </div>
          <div class="form-floating mb-3">
            <select class="form-select" id="floatingSelect" aria-label="Floating label select example" name="strapmaterial" required value="<%= product.strapmaterial%>">
              <option value="Leather">Leather</option>
              <option value="Stainless Steel">Stainless Steel</option>
              <option value="Silicone">Silicone</option>
              <option value="Rubber">Rubber</option>
              <option value="Ceramic">Ceramic</option>
            </select>
            <label for="floatingSelect">Choose the Strap material</label>
          </div>

          <div id="existingImagesContainer" class="mb-3">
            <label for="existingImages" class="form-label">Existing Images</label>
            <div id="existingImagesPreviewContainer" class="d-flex flex-wrap">
                <!-- Display existing images here -->
                <% for (let i = 0; i < product.image.length; i++) { %>
                    <div class="img-container mr-2 mb-2 position-relative">
                        <img src="/uploads/<%= product.image[i] %>" class="img-preview" />
                        <!-- Add a remove button for each existing image -->
                        <button class="remove-btn" onclick="removeExistingImage('<%= product._id %>', '<%= product.image[i] %>')">X</button>


                    </div>
                <% } %>
            </div>
        </div>
        <p id="successMessage" style="display: none; color: green;"></p>

          <div class="mb-3">
            <label for="formFileMultiple" class="form-label">Upload images</label>
            <input class="form-control" type="file" accept="image/*" multiple name="image" id="imageInput">
          </div>
          <div id="imagePreviewContainer" class="mb-3" style="max-width: 300px; max-height: 300px; overflow: hidden;">
            <img id="croppedImage">


        </div>
          <div class="form-floating  mb-3">
            <select class="form-select" id="floatingSelect" aria-label="Floating label select example" name="isListed" value="<%= product.isListed%>" required>
              <option value="true">Visible</option>
              <option value="false">Hide(Soft Delete)</option>
            </select>
            <label for="floatingSelect">Control the Visibility</label>
          </div>
          <div class="form-floating mb-3">
            <input type="number" class="form-control" id="floatingPassword" name="price" value="<%= product.price %>" required>
            <label for="floatingInput">Price</label>
          </div>
          <p id="Perror" style="display: none; color: red;"></p>
          <div class="form-floating mb-3">
            <input type="number" class="form-control" id="floatingPassword" name="stock"  value="<%= product.stock %>" required>
            <label for="floatingInput">Stock Available</label>
          </div>
          <p id="Serror" style="display: none; color: red;"></p>
          <div class="form-floating mb-3">
            <input type="number" class="form-control" id="floatingPassword" name="offerprice"  max="<%= product.price%>" value="<%= product.offerprice%>">
            <label for="floatingInput">Offer Price</label>
          </div>
          <p id="Oerror" style="display: none; color: red;"></p>
            
          <button type="submit" class="btn btn-primary" style="width: min-content;">Submit</button>
    </div>
    </div>
</form>
    <div class="switch d-flex justify-content-center"><a href="/adminproducts">Back to home</a></div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- Script -->
    <script>
       function validateInputs() {
    const priceInput = document.getElementsByName('price')[0];
    const stockInput = document.getElementsByName('stock')[0];
    const offerInput = document.getElementsByName('offerprice')[0];
    const price = parseInt(priceInput.value);
    const stock = parseInt(stockInput.value);
    const offer = parseInt(offerInput.value);
    const PerrorElement = document.getElementById('Perror');
    const SerrorElement = document.getElementById('Serror');
    const OerrorElement = document.getElementById('Oerror');

    // Check if both price and stock are greater than 0
    if (price <= 0) {
        PerrorElement.innerText = 'Price must be greater than 0';
        PerrorElement.style.display = 'block';
        return false;
    } else {
        PerrorElement.style.display = 'none';
    }

    if (stock < 0) {
        SerrorElement.innerText = 'Stock must be greater than or equal 0';
        SerrorElement.style.display = 'block';
        return false;
    } else {
        SerrorElement.style.display = 'none';
    }

    if(offer < 0){
      OerrorElement.innerText = 'Offer must be greater than or equal to 0';
      OerrorElement.style.display = 'block';
      return false;
    }else{
      OerrorElement.style.display = 'none';
    }

    return true;
}

// Add event listeners to the inputs to validate them on change
document.getElementsByName('price')[0].addEventListener('change', validateInputs);
document.getElementsByName('stock')[0].addEventListener('change', validateInputs);
document.getElementsByName('offerprice')[0].addEventListener('change', validateInputs);

document.querySelector('form').addEventListener('submit', function(event) {
    if (!validateInputs()) {
        event.preventDefault(); // Prevent form submission
    }
});
      // Array to store images temporarily
      let tempImages = [];
  
        // Function to handle image deletion
    async function removeExistingImage(productId, imageUrl) {
        try {
            // Send a request to delete the image
            const response = await fetch(`/deleteimage/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ imageUrl }),
            });

            if (!response.ok) {
                throw new Error(`Failed to delete image: ${response.status}`);
            }

            const data = await response.json();
            console.log('Image deleted successfully:', data);

            // Update the UI or show a success message
            // For example, you can remove the deleted image from the UI
            const deletedImage = document.getElementById(imageUrl);
            if (deletedImage) {
                deletedImage.remove();
            }

            // Show a success message
            const successMessage = document.getElementById('successMessage');
            if (successMessage) {
                successMessage.innerText = 'Image deleted successfully';
            }
        } catch (error) {
            console.error('Error deleting image:', error.message);
            // Handle the error, such as showing an error message to the user
        }
    }


    document.getElementById('imageInput').addEventListener('change', function (e) {
    // Clear existing images
    document.getElementById('imagePreviewContainer').innerHTML = "";

    // Loop through selected files and display image preview
    for (let i = 0; i < e.target.files.length; i++) {
        let file = e.target.files[i];

        // Check if the selected file is an image
        if (file && file.type.startsWith('image/')) {
            var reader = new FileReader();

            reader.onload = function (e) {
              let imgContainer = document.createElement('div');
                      imgContainer.classList.add('img-container');
  
                      let imgElement = document.createElement('img');
                      imgElement.classList.add('img-preview');
                      imgElement.src = e.target.result;
  
                      // Add image to temporary storage
                      tempImages.push({ file, container: imgContainer });
  
                      // Create remove button
                      let removeBtn = document.createElement('button');
                      removeBtn.classList.add('remove-btn');
                      removeBtn.innerHTML = 'X';
  
                      // Add click event to remove image
                      removeBtn.addEventListener('click', function () {
                          imgContainer.remove(); // Remove the image container
  
                          // Remove image from temporary storage
                          let index = tempImages.findIndex(item => item.file === file);
                          if (index !== -1) {
                              tempImages.splice(index, 1);
                          }
                      });
  
                      // Append the remove button to the image container
                      imgContainer.appendChild(removeBtn);
  
                      // Append the image to the container
                      imgContainer.appendChild(imgElement);

                // Append the image container to the preview container
                document.getElementById('imagePreviewContainer').appendChild(imgContainer);
            };

            reader.readAsDataURL(file);
        }  else {
            // Display an alert for non-image files
            alert('Invalid file format. Please select only images.');
            // Optionally, you can clear the file input if needed
            document.getElementById('imageInput').value = '';
        }
    }
});

</script>
</body>
</html>

